{"version":3,"sources":["services/jobs.js","App.js","index.js"],"names":["baseUrl","getAll","axios","get","then","response","data","getTask","id","create","newObject","a","post","remove","delete","update","objectPart","put","Modal","setAppElement","JobForm","formType","job","updateJobList","closeForm","teamMembers","useState","jobNumber","setJobNumber","jobLink","setJobLink","dueDate","Date","setDueDate","maxHours","setMaxHours","assignee","filter","teamMember","includes","label","setAssignee","description","setDescription","status","value","selectedStatus","setSelectedStatus","clearState","className","type","onChange","event","target","placeholder","dateFormat","selected","date","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","options","defaultValue","isMulti","isSearchable","onClick","preventDefault","statusInArray","Array","jobObject","jobService","returnedJob","Job","editJob","deleteJob","href","rel","slice","App","jobs","setJobs","setJob","showForm","setShowForm","setFormType","selectedTeamMembers","setSelectedTeamMembers","getJobList","initialJobs","eachJob","map","eachAssignee","useEffect","isOpen","onRequestClose","style","overlay","display","justifyContent","alignItems","content","inset","padding","overflow","border","finalJobs","selectedTeamMemberValues","some","filterJobs","jobId","showEditForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NACMA,EAAU,aA2BD,GAAEC,OAzBF,WAEb,OADgBC,IAAMC,IAAIH,GACXI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAuBlBC,QApBT,SAACC,GAEf,OADgBN,IAAMC,IAAN,UAAaH,EAAb,YAAwBQ,IACzBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkBTG,OAftB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACUT,IAAMU,KAAKZ,EAASU,GAD9B,cACPL,EADO,yBAENA,EAASC,MAFH,2CAAH,sDAe8BO,OAV9B,uCAAG,WAAOL,GAAP,eAAAG,EAAA,sEACUT,IAAMY,OAAN,UAAgBd,EAAhB,YAA2BQ,IADrC,cACPH,EADO,yBAENA,EAASC,MAFH,2CAAH,sDAUsCS,OALnC,SAACP,EAAIQ,GAElB,OADgBd,IAAMe,IAAN,UAAajB,EAAb,YAAwBQ,GAAMQ,GAC/BZ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,yCClB3CY,IAAMC,cAAc,SAEpB,IAAMC,EAAU,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,IAAKC,EAA4C,EAA5CA,cAAeC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YAAkB,EAC1CC,mBAASJ,EAAIK,WAD6B,mBACrEA,EADqE,KAC1DC,EAD0D,OAE9CF,mBAASJ,EAAIO,SAFiC,mBAErEA,EAFqE,KAE5DC,EAF4D,OAG9CJ,mBAASJ,EAAIS,QAAUT,EAAIS,QAAU,IAAIC,MAHK,mBAGrED,EAHqE,KAG5DE,EAH4D,OAI5CP,mBAASJ,EAAIY,UAJ+B,mBAIrEA,EAJqE,KAI3DC,EAJ2D,OAK5CT,mBAASJ,EAAIc,SAAWX,EAAYY,QAAO,SAAAC,GAAU,OAAIhB,EAAIc,SAASG,SAAb,WAA0BD,EAAWE,WAAY,IAL9D,mBAKrEJ,EALqE,KAK3DK,EAL2D,OAMtCf,mBAASJ,EAAIoB,aANyB,mBAMrEA,EANqE,KAMxDC,EANwD,OAOhCjB,mBAASJ,EAAIsB,OAAStB,EAAIsB,OAAS,CAAEC,MAAO,UAAWL,MAAO,aAP9B,mBAOrEM,EAPqE,KAOrDC,EAPqD,KAgBtEC,EAAa,WAOjB,OANApB,EAAa,IACbK,EAAW,IACXE,EAAY,IACZM,EAAY,IACZE,EAAe,IAER,MA2CT,OACE,mCACE,qBAAKM,UAAU,wCAAf,SACE,qBAAKA,UAAU,kCAAf,SACE,qBAAKA,UAAU,mFAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,qBAAKA,UAAU,sGAAf,gBACA,qBAAKA,UAAU,iEAAf,SACE,oBAAIA,UAAU,kBAAd,sBAGJ,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,2EAAf,UACE,sBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAOA,UAAU,gBAAjB,wBACA,uBAAOC,KAAK,OAAOL,MAAOlB,EAAWwB,SAAU,SAACC,GAAD,OAAWxB,EAAawB,EAAMC,OAAOR,QAAQI,UAAU,gJAExG,sBAAKA,UAAU,gBAAf,UACE,uBAAOA,UAAU,gBAAjB,sBACA,uBAAOC,KAAK,OAAOL,MAAOhB,EAASyB,YAAY,cAAcH,SAAU,SAACC,GAAD,OAAWtB,EAAWsB,EAAMC,OAAOR,QAAQI,UAAU,mJAGhI,sBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAOA,UAAU,gBAAjB,sBACA,sBAAKA,UAAU,oDAAf,UACE,cAAC,IAAD,CACAM,WAAW,aACXC,SAAUzB,EACVoB,SAAU,SAAAM,GAAI,OAAIxB,EAAWwB,IAC7BR,UAAU,8IAEV,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,UAAUS,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAArF,SAAkH,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,qGAI7L,sBAAKhB,UAAU,gBAAf,UACE,uBAAOA,UAAU,gBAAjB,uBACA,uBAAOC,KAAK,OAAOL,MAAOX,EAAUiB,SAAU,SAACC,GAAD,OAAWjB,EAAYiB,EAAMC,OAAOR,QAAQI,UAAU,mJAGxG,sBAAKA,UAAU,8BAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBAAOA,UAAU,gBAAjB,sBACA,cAAC,IAAD,CACAiB,QAASzC,EACT0C,aAAc/B,EACde,SAAUV,EACV2B,SAAO,EACPC,cAAY,OAGd,sBAAKpB,UAAU,sBAAf,UACE,uBAAOA,UAAU,gBAAjB,oBACA,cAAC,IAAD,CACAiB,QAnHE,CACpB,CAAErB,MAAO,UAAWL,MAAO,YAC3B,CAAEK,MAAO,aAAcL,MAAO,eAC9B,CAAEK,MAAO,UAAWL,MAAO,WAC3B,CAAEK,MAAO,YAAaL,MAAO,cAgHX2B,aAAcrB,EACdK,SAAUJ,EACVsB,cAAY,UAIhB,sBAAKpB,UAAU,gBAAf,UACE,uBAAOA,UAAU,gBAAjB,yBACA,uBAAOC,KAAK,OAAOL,MAAOH,EAAaS,SAAU,SAACC,GAAD,OAAWT,EAAeS,EAAMC,OAAOR,QAAQI,UAAU,mJAG9G,sBAAKA,UAAU,mCAAf,UACI,yBAAQqB,QAAS,kBAAM9C,KAAayB,UAAU,gGAA9C,UACE,qBAAKA,UAAU,eAAeS,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAYC,MAAM,6BAA1F,SAAuH,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,2BAD9L,aAGA,wBAAQK,QAlHR,SAAClB,GACjBA,EAAMmB,iBAEN,IAAIC,EAAgB,GAGlBA,EADE1B,aAA0B2B,MACZ3B,EAEA,IAAI2B,MAAM3B,GAG5B,IAAM4B,EAAY,CAChB/C,UAAWA,EACXE,QAASA,EACTE,QAASA,EACTG,SAAUA,EACVE,SAAUA,EACVM,YAAaA,EACbE,OAAQ4B,GAGO,QAAbnD,EACFsD,EACClE,OAAOiE,GACPtE,MAAK,SAAAwE,GACJ5B,IACAzB,IACAC,OAEoB,SAAbH,GACTsD,EACC5D,OAAOO,EAAId,GAAIkE,GACftE,MAAK,SAAAwE,GACJ5B,IACAzB,IACAC,QA+EwCyB,UAAU,yGAAtC,sCAWd4B,EAAM,SAAC,GAAkG,IAAhGlD,EAA+F,EAA/FA,UAAWE,EAAoF,EAApFA,QAASE,EAA2E,EAA3EA,QAASG,EAAkE,EAAlEA,SAAUE,EAAwD,EAAxDA,SAAUM,EAA8C,EAA9CA,YAAaE,EAAiC,EAAjCA,OAAQkC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAS5F,OACE,+BACE,oBAAI9B,UAAU,wCAAd,SATEpB,EACK,mBAAGoB,UAAU,oCAAoC+B,KAAMnD,EAASwB,OAAO,SAAS4B,IAAI,aAApF,SAAkGtD,IAElGA,IASP,oBAAIsB,UAAU,wCAAd,SAAuDlB,EAAQmD,MAAM,EAAG,MACxE,oBAAIjC,UAAU,wCAAd,SAAuDf,IACvD,oBAAIe,UAAU,wCAAd,SAAuDb,IACvD,oBAAIa,UAAU,4CAAd,SAA2DP,IAC3D,oBAAIO,UAAU,wCAAd,SAAuDL,IACvD,oBAAIK,UAAU,6BAAd,SACE,sBAAKA,UAAU,kCAAf,UACE,qBAAKA,UAAU,yDAAyDqB,QAASQ,EAAjF,SACE,qBAAKjB,MAAM,6BAA6BH,KAAK,OAAOE,QAAQ,YAAYD,OAAO,eAA/E,SACE,sBAAMG,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,yGAGzE,qBAAKhB,UAAU,yDAAyDqB,QAASS,EAAjF,SACE,qBAAKlB,MAAM,6BAA6BH,KAAK,OAAOE,QAAQ,YAAYD,OAAO,eAA/E,SACE,sBAAMG,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,8IAuNpEkB,EA9MH,WAAO,IAAD,EACQzD,mBAAS,IADjB,mBACT0D,EADS,KACHC,EADG,OAEM3D,mBAAS,MAFf,mBAETJ,EAFS,KAEJgE,EAFI,OAGgB5D,oBAAS,GAHzB,mBAGT6D,EAHS,KAGCC,EAHD,OAIgB9D,mBAAS,IAJzB,mBAITL,EAJS,KAICoE,EAJD,OAKsC/D,mBAAS,CAAC,CAACc,MAAO,SALxD,mBAKTkD,EALS,KAKYC,EALZ,OAM4BjE,mBAAS,CAAC,CAACc,MAAO,SAN9C,mBAMTM,EANS,KAMOC,EANP,KAQVtB,EAAc,CAClB,CAAEoB,MAAO,MAAOL,MAAO,OACvB,CAAEK,MAAO,SAAUL,MAAO,aAC1B,CAAEK,MAAO,OAAQL,MAAO,QACxB,CAAEK,MAAO,QAASL,MAAO,SACzB,CAAEK,MAAO,OAAQL,MAAO,QACxB,CAAEK,MAAO,QAASL,MAAO,SACzB,CAAEK,MAAO,OAAQL,MAAO,SAWpBoD,EAAa,WACjBjB,EACG1E,SACAG,MAAK,SAAAyF,GACJ,IAAMC,EAAUD,EAAYE,KAAI,SAAAzE,GAY9B,MAXkB,CAChBd,GAAIc,EAAId,GACRmB,UAAWL,EAAIK,UACfE,QAASP,EAAIO,QACbE,QAAST,EAAIS,QACbG,SAAUZ,EAAIY,SACdE,SAAUd,EAAIc,SAAS2D,KAAI,SAAAC,GAAY,iBAAQA,EAAaxD,UAC5DE,YAAapB,EAAIoB,YACjBE,OAAQtB,EAAIsB,WAMhByC,EAAQS,OAIdG,qBAAU,WACRL,MACC,IAEH,IA2BMrE,EAAgB,WACpBqE,KAGIpE,EAAY,WAChBgE,GAAY,IAgCd,OACE,qCACE,qBAAKvC,UAAU,qBAAf,SACE,sBAAKA,UAAU,+DAAf,UACE,qBAAKA,UAAU,oCAAf,SACE,8BACE,mBAAGA,UAAU,kEAAb,8BAGJ,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,oCAAf,SACE,wBAAQA,UAAU,6EAA6EqB,QAAS,kBAtBlHmB,EAAY,OACZH,EAAO,SACPE,GAAY,IAoBF,8BAMR,cAAC,IAAD,CACAU,OAAQX,EACRY,eAAgB,kBAAMX,GAAY,IAClCY,MAAO,CACLC,QAAS,CACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdC,QAAS,CACPC,MAAO,QACPC,QAAS,EACTC,SAAU,UACVC,OAAQ,SAbZ,SAiBE,cAAC,EAAD,CAASxF,SAAUA,EAAUC,IAAKA,EAAKC,cAAeA,EAAeC,UAAWA,EAAWC,YAAaA,MAI1G,qBAAKwB,UAAU,yFAAf,SACI,qBAAKA,UAAU,wBAAf,SACI,wBAAOA,UAAU,8BAAjB,UACE,uBAAOA,UAAU,6DAAjB,SACE,+BACE,4CACA,0CACA,2CACA,cAAC,IAAD,CACAkB,aAAc1C,EAAY,GAC1ByC,QAASzC,EACT0B,SAAUwC,EACVrC,YAAY,WACZc,SAAO,EACPC,cAAY,IAEZ,6CACA,cAAC,IAAD,CACAF,aAAcrB,EACdoB,QA5JI,CACpB,CAAErB,MAAO,MAAOL,MAAO,OACvB,CAAEK,MAAO,UAAWL,MAAO,YAC3B,CAAEK,MAAO,aAAcL,MAAO,eAC9B,CAAEK,MAAO,UAAWL,MAAO,WAC3B,CAAEK,MAAO,YAAaL,MAAO,cAwJbW,SAAUJ,EACVO,YAAY,SACZe,cAAY,IAEZ,8CAGJ,uBAAOpB,UAAU,kCAAjB,SAjIK,WACjB,IAAI6D,EACAtC,EAAgB,GAEduC,EAA2BrB,EAAoBK,KAAI,SAAAzD,GAAU,iBAAQA,EAAWE,UActF,OAXEgC,EADE1B,aAA0B2B,MACZ3B,EAEA,IAAI2B,MAAM3B,GAI1BgE,EADEC,EAAyBxE,SAAS,QACxB6C,EAEAA,EAAK/C,QAAO,SAAAf,GAAG,OAAIA,EAAIc,SAAS4E,MAAK,SAAAhB,GAAY,OAAIe,EAAyBxE,SAASyD,SAGtE,QAA3BxB,EAAc,GAAGhC,MACZsE,EAEPA,EAAYA,EAAUzE,QAAO,SAAAf,GAAG,OAAIkD,EAAc,GAAGhC,QAAUlB,EAAIsB,OAAO,GAAGJ,SA6GhEyE,GAAalB,KAAI,SAAAzE,GAAG,OACnB,cAAC,EAAD,CAEA4F,MAAS5F,EAAId,GACbmB,UAAWL,EAAIK,UACfE,QAASP,EAAIO,QACbE,QAAST,EAAIS,QACbG,SAAUZ,EAAIY,SACdE,SAAQ,UAAKd,EAAIc,UACjBM,YAAapB,EAAIoB,YACjBE,OAAQtB,EAAIsB,OAAO,GAAGJ,MACtBuC,UAAW,kBAjGVvE,EAiG0Bc,EAAId,QAhG/CmE,EACC9D,OAAOL,GACPJ,MAAK,SAAAwE,GACJS,EAAQD,EAAK/C,QAAO,SAAAf,GAAG,OAAIA,EAAId,KAAOA,SAJxB,IAACA,GAkGDsE,QAAS,kBApFN,SAACxD,GACpBmE,EAAY,QACZH,EAAOhE,GACPkE,GAAY,GAiFmB2B,CAAa7F,KAVvBA,EAAId,oBCzX7B4G,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8a8d5f62.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/tasks'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getTask = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const response = await axios.delete(`${baseUrl}/${id}`)\n  return response.data\n}\n\nconst update = (id, objectPart) => {\n  const request = axios.put(`${baseUrl}/${id}`, objectPart)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, getTask, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport Modal from 'react-modal'\nimport jobService from './services/jobs'\nimport Select from 'react-select'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nModal.setAppElement('#root')\n\nconst JobForm = ({ formType, job, updateJobList, closeForm, teamMembers }) => {\n  const [jobNumber, setJobNumber] = useState(job.jobNumber)\n  const [jobLink, setJobLink] = useState(job.jobLink)\n  const [dueDate, setDueDate] = useState(job.dueDate ? job.dueDate : new Date())\n  const [maxHours, setMaxHours] = useState(job.maxHours)\n  const [assignee, setAssignee] = useState(job.assignee ? teamMembers.filter(teamMember => job.assignee.includes(` ${teamMember.label}`)) : [])\n  const [description, setDescription] = useState(job.description)\n  const [selectedStatus, setSelectedStatus] = useState(job.status ? job.status : { value: 'toStart', label: 'To Start' })\n\n  const statusOptions = [\n    { value: 'toStart', label: 'To Start' },\n    { value: 'inProgress', label: 'In Progress' },\n    { value: 'blocked', label: 'Blocked' },\n    { value: 'completed', label: 'Completed' }\n  ]\n\n  const clearState = () => {\n    setJobNumber('')\n    setDueDate('')\n    setMaxHours('')\n    setAssignee('')\n    setDescription('')\n    \n    return null\n  }\n\n  const handleJob = (event) => {\n    event.preventDefault()\n    \n    let statusInArray = []\n\n    if (selectedStatus instanceof Array) {\n      statusInArray = selectedStatus\n    } else {\n      statusInArray = new Array(selectedStatus)\n    }\n\n    const jobObject = {\n      jobNumber: jobNumber,\n      jobLink: jobLink,\n      dueDate: dueDate,\n      maxHours: maxHours,\n      assignee: assignee,\n      description: description,\n      status: statusInArray\n    }\n\n    if (formType === 'add') {\n      jobService\n      .create(jobObject)\n      .then(returnedJob => {\n        clearState()\n        updateJobList()\n        closeForm()\n      })\n    } else if (formType === 'edit') {\n      jobService\n      .update(job.id, jobObject)\n      .then(returnedJob => {\n        clearState()\n        updateJobList()\n        closeForm()\n      })\n    }\n  }\n\n  return (\n    <>\n      <div className=\"bg-white flex flex-col justify-center\">\n        <div className=\"relative sm:max-w-xl sm:mx-auto\">\n          <div className=\"relative bg-gray-200 px-4 py-10 bg-white mx-8 md:mx-0 shadow rounded-3xl sm:p-10\">\n            <div className=\"max-w-md mx-auto\">\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"h-14 w-14 bg-gray-900 rounded-md flex flex-shrink-0 justify-center items-center text-white text-2xl\">JL</div>\n                <div className=\"block pl-2 pt-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"leading-relaxed\">Job</h2>\n                </div>\n              </div>\n              <div className=\"divide-y divide-gray-200\">\n                <div className=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"flex flex-col\">\n                      <label className=\"leading-loose\">Job Number</label>\n                      <input type=\"text\" value={jobNumber} onChange={(event) => setJobNumber(event.target.value)} className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\" />\n                    </div>\n                    <div className=\"flex flex-col\">\n                      <label className=\"leading-loose\">Job Link</label>\n                      <input type=\"text\" value={jobLink} placeholder=\"https://...\" onChange={(event) => setJobLink(event.target.value)} className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\" />\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"flex flex-col\">\n                      <label className=\"leading-loose\">Due Date</label>\n                      <div className=\"relative focus-within:text-gray-600 text-gray-400\">\n                        <DatePicker\n                        dateFormat=\"yyyy-MM-dd\"\n                        selected={dueDate}\n                        onChange={date => setDueDate(date)}\n                        className=\"pl-10 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\"\n                        />\n                        <div className=\"absolute left-3 top-2\">\n                          <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path></svg>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col\">\n                      <label className=\"leading-loose\">Max Hours</label>\n                      <input type=\"text\" value={maxHours} onChange={(event) => setMaxHours(event.target.value)} className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\" />\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"flex flex-col w-1/2\">\n                      <label className=\"leading-loose\">Assignee</label>\n                      <Select\n                      options={teamMembers}\n                      defaultValue={assignee}\n                      onChange={setAssignee}\n                      isMulti\n                      isSearchable\n                      /> \n                    </div>\n                    <div className=\"flex flex-col w-1/2\">\n                      <label className=\"leading-loose\">Status</label>\n                      <Select\n                      options={statusOptions}\n                      defaultValue={selectedStatus}\n                      onChange={setSelectedStatus}\n                      isSearchable\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label className=\"leading-loose\">Description</label>\n                    <input type=\"text\" value={description} onChange={(event) => setDescription(event.target.value)} className=\"px-4 py-2 border focus:ring-gray-500 focus:border-gray-900 w-full sm:text-sm border-gray-300 rounded-md focus:outline-none text-gray-600\" />\n                  </div>\n                </div>\n                <div className=\"pt-4 flex items-center space-x-4\">\n                    <button onClick={() => closeForm()} className=\"flex justify-center items-center w-full text-gray-900 px-4 py-3 rounded-md focus:outline-none\">\n                      <svg className=\"w-6 h-6 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg> Cancel\n                    </button>\n                    <button onClick={handleJob} className=\"bg-blue-500 flex justify-center items-center w-full text-white px-4 py-3 rounded-md focus:outline-none\">Submit</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst Job = ({ jobNumber, jobLink, dueDate, maxHours, assignee, description, status, editJob, deleteJob }) => {\n  const jobNumberLink = () => {\n    if (jobLink) {\n      return <a className=\"text-blue-600 hover:text-blue-900\" href={jobLink} target=\"_blank\" rel=\"noreferrer\">{jobNumber}</a>\n    } else {\n      return jobNumber\n    }\n  }\n\n  return (\n    <tr>\n      <td className=\"py-3 px-6 text-left whitespace-nowrap\">\n        {jobNumberLink()}\n      </td>\n      <td className=\"py-3 px-6 text-left whitespace-nowrap\">{dueDate.slice(0, 10)}</td>\n      <td className=\"py-3 px-6 text-left whitespace-nowrap\">{maxHours}</td>\n      <td className=\"py-3 px-6 text-left whitespace-nowrap\">{assignee}</td>\n      <td className=\"py-3 px-6 text-left break-normal max-w-sm\">{description}</td>\n      <td className=\"py-3 px-6 text-left whitespace-nowrap\">{status}</td>\n      <td className=\"border-b hover:bg-gray-100\">\n        <div className=\"flex item-center justify-center\">\n          <div className=\"w-4 mr-2 transform hover:text-blue-600 hover:scale-110\" onClick={editJob}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\" />\n            </svg>\n          </div>\n          <div className=\"w-4 mr-2 transform hover:text-blue-600 hover:scale-110\" onClick={deleteJob}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n            </svg>\n          </div>\n        </div>\n      </td>\n    </tr>\n  )\n}\n\nconst App = () => {\n  const [jobs, setJobs] = useState([])\n  const [job, setJob] = useState(null)\n  const [showForm, setShowForm] = useState(false)\n  const [formType, setFormType] = useState('')\n  const [selectedTeamMembers, setSelectedTeamMembers] = useState([{label: 'All'}])\n  const [selectedStatus, setSelectedStatus] = useState([{label: 'All'}])\n\n  const teamMembers = [\n    { value: 'all', label: 'All' },\n    { value: 'cedric', label: 'Cédric' },\n    { value: 'dora', label: 'Dora' },\n    { value: 'kelly', label: 'Kelly' },\n    { value: 'luke', label: 'Luke' },\n    { value: 'mihir', label: 'Mihir' },\n    { value: 'vera', label: 'Vera' }\n  ]\n\n  const statusOptions = [\n    { value: 'all', label: 'All' },\n    { value: 'toStart', label: 'To Start' },\n    { value: 'inProgress', label: 'In Progress' },\n    { value: 'blocked', label: 'Blocked' },\n    { value: 'completed', label: 'Completed' }\n  ]\n\n  const getJobList = () => {\n    jobService\n      .getAll()\n      .then(initialJobs => {\n        const eachJob = initialJobs.map(job => {\n          const jobObject = {\n            id: job.id,\n            jobNumber: job.jobNumber,\n            jobLink: job.jobLink,\n            dueDate: job.dueDate,\n            maxHours: job.maxHours,\n            assignee: job.assignee.map(eachAssignee => ` ${eachAssignee.label}`),\n            description: job.description,\n            status: job.status\n          }\n\n          return jobObject\n        })\n\n        setJobs(eachJob)\n      })\n  }\n\n  useEffect(() => {\n    getJobList()\n  }, [])\n\n  const filterJobs = () => {\n    let finalJobs\n    let statusInArray = []\n\n    const selectedTeamMemberValues = selectedTeamMembers.map(teamMember => ` ${teamMember.label}`)\n\n    if (selectedStatus instanceof Array) {\n      statusInArray = selectedStatus\n    } else {\n      statusInArray = new Array(selectedStatus)\n    }\n\n    if (selectedTeamMemberValues.includes(' All')) {\n      finalJobs = jobs\n    } else {\n      finalJobs = jobs.filter(job => job.assignee.some(eachAssignee => selectedTeamMemberValues.includes(eachAssignee)))\n    }\n\n    if (statusInArray[0].label === 'All') {\n      return finalJobs\n    } else {\n      finalJobs = finalJobs.filter(job => statusInArray[0].label === job.status[0].label)\n    }\n\n    return finalJobs\n  }\n\n  const updateJobList = () => {\n    getJobList()\n  }\n\n  const closeForm = () => {\n    setShowForm(false)\n  }\n  const editJob = (job) => {\n    if (showForm === false) {\n      return null\n    }\n\n    return (\n      <JobForm formType={formType} job={job} updateJobList={updateJobList} closeForm={closeForm} teamMembers={teamMembers} />\n    )\n  }\n\n  const deleteJob = (id) => {\n    jobService\n    .remove(id)\n    .then(returnedJob => {\n      setJobs(jobs.filter(job => job.id !== id))\n    })\n  }\n\n  const showAddForm = () => {\n    setFormType('add')\n    setJob({})\n    setShowForm(true)\n  }\n\n  const showEditForm = (job) => {\n    setFormType('edit')\n    setJob(job)\n    setShowForm(true)\n  }  \n\n  return (\n    <>\n      <nav className=\"bg-gray-200 shadow\">\n        <div className=\"mx-auto px-6 py-3 md:flex md:justify-between md:items-center\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <p className=\"text-gray-800 text-xl font-bold md:text-2xl hover:text-gray-700\">HBK Job List</p>\n            </div>\n          </div>\n          <div className=\"md:flex items-center\">\n            <div className=\"flex flex-col md:flex-row md:mx-6\">\n              <button className=\"my-1 text-sm text-gray-700 font-medium hover:text-blue-600 md:mx-4 md:my-0\" onClick={() => showAddForm()}>Add Job</button>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      <Modal\n      isOpen={showForm}\n      onRequestClose={() => setShowForm(false)}\n      style={{\n        overlay: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        content: {\n          inset: 'unset',\n          padding: 0,\n          overflow: 'initial',\n          border: 'none'\n        }\n      }}\n      >\n        <JobForm formType={formType} job={job} updateJobList={updateJobList} closeForm={closeForm} teamMembers={teamMembers} />\n      </Modal>\n\n      {/* <Notification message={message} /> */}\n      <div className=\"min-w-screen bg-white pt-12 overflow-y-auto flex items-center justify-center font-sans\">\n          <div className=\"w-full pb-80 lg:w-5/6\">\n              <table className=\"min-w-max w-full table-auto\">\n                <thead className=\"bg-gray-200 text-gray-600 uppercase text-sm leading-normal\">\n                  <tr>\n                    <th>Job Number</th>\n                    <th>Due Date</th>\n                    <th>Max Hours</th>\n                    <Select\n                    defaultValue={teamMembers[0]}\n                    options={teamMembers}\n                    onChange={setSelectedTeamMembers}\n                    placeholder='Assignee'\n                    isMulti\n                    isSearchable\n                    />\n                    <th>Description</th>\n                    <Select\n                    defaultValue={selectedStatus}\n                    options={statusOptions}\n                    onChange={setSelectedStatus}\n                    placeholder='Status'\n                    isSearchable\n                    />\n                    <th>Actions</th>\n                  </tr>\n                </thead>\n                <tbody className=\"ext-gray-600 text-sm font-light\">\n                  {filterJobs().map(job => \n                    <Job\n                    key={job.id}\n                    jobId = {job.id}\n                    jobNumber={job.jobNumber}\n                    jobLink={job.jobLink}\n                    dueDate={job.dueDate}\n                    maxHours={job.maxHours}\n                    assignee={`${job.assignee}`}\n                    description={job.description}\n                    status={job.status[0].label}\n                    deleteJob={() => deleteJob(job.id)}\n                    editJob={() => showEditForm(job)}\n                    />\n                  )}\n                </tbody>\n              </table>\n          </div>\n        </div>\n    </>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}